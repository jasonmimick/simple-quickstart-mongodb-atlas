---
AWSTemplateFormatVersion: '2010-09-09'
Description: MongoDB Atlas AWS CloudFormation Quickstart
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Network Configuration
      Parameters:
      - VPC
      - AccessList
    - Label:
        default: Security Configuration
      Parameters:
      - PublicKey
      - PrivateKey 
      - OrgId
    - Label:
        default: MongoDB Atlas Configuration
      Parameters:
      - ProjectName
      - ClusterName
      - ClusterRegion
      - ClusterInstanceSize
    ParameterLabels:
      ProjectName:
        default: atlas-cfn-quickstart
      ClusterName:
        default: cluster-1
      ClusterRegion:
        default: us-east-1
      ClusterInstanceSize:
        default: MongoDB Atlas Instance Size
Parameters:
  EnableSecretForApiKey:
    AllowedValues:
    - 'true'
    - 'false'
    Default: 'false'
    Description: "Set to true to enable adding an AWS Secret for your MongoDB API Key"
    Type: String
  PublicKey:
    Description: "Your MongoDB Cloud Public API Key"
    Type: String
    Default: "PublicKey"
  PrivateKey:
    Description: "Your MongoDB Cloud Private API Key"
    Type: String
    Default: "PrivateKey"
  OrgId:
    Description: "Your MongoDB Cloud Organization Id"
    Type: String
    Default: "OrgId"
  ClusterName:
    Description: Name of the cluster as it appears in Atlas. Once the cluster is created,
      its name cannot be changed.
    Type: String
    Default: "Cluster-1"
  ClusterInstanceSize:
    Default: "M10" 
    Description: Atlas provides different cluster tiers, each with a default storage capacity and RAM size. The cluster you select is used for all the data-bearing hosts in your cluster tier. See https://docs.atlas.mongodb.com/reference/amazon-aws/#amazon-aws.
    Type: String
    AllowedValues:
    - "M10"
    - "M20"
    - "M30"
    - "M40"
    - "R40"
    - "M40_NVME"
    - "M50"
    - "R50"
    - "M50_NVME"
    - "M60"
    - "R60"
    - "M60_NVME"
    - "M80"
    - "R80"
    - "M80_NVME"
    - "M100"
    - "M140"
    - "M200"
    - "R200"
    - "M200_NVME"
    - "M300"
    - "R300"
    - "R400"
    - "M400_NVME"
    - "R700"
  ClusterRegion:
    Default: us-east-1
    Description: The AWS Region where the Atlas DB Cluster will run.
    Type: String
    AllowedValues:
    - "us-east-1"
    - "us-east-2"
    - "ca-central-1"
    - "us-west-1"
    - "us-west-2"
    - "sa-east-1"
    - "ap-south-1"
    - "ap-east-2"
    - "ap-southeast-1"
    - "ap-southeast-2"
    - "ap-northeast-1"
    - "ap-northeast-2"
    - "eu-central-1"
    - "eu-west-1"
    - "eu-north-1"
    - "eu-west-1"
    - "eu-west-2"
    - "eu-west-3"
    - "eu-south-1"
    - "me-south-1"
    - "af-south-1"
  ClusterMongoDBMajorVersion:
    Description: The version of MongoDB
    Type: String
    Default: "4.4"
    AllowedValues:
    - "3.6"
    - "4.0"
    - "4.2"
    - "4.4"
  QSS3BucketName:
    AllowedPattern: "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$"
    Default: aws-quickstart
    Type: String
    ConstraintDescription: Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen
      (-).
    Description: S3 bucket name for the Quick Start assets. Quick Start bucket name
      can include numbers, lowercase letters, uppercase letters, and hyphens (-).
      It cannot start or end with a hyphen (-).
  VPC:
    Type: AWS::EC2::VPC::Id
    Description: VPC-ID of your existing Virtual Private Cloud (VPC) which you wish to peer to your new MongoDB Atlas cluster. This is the VPC that your application uses usually.
  AccessListType:
    Description: The kind of access list entry for this quickstart, if any
    Type: String
    Default: "NONE"
    AllowedValues:
    - "NONE"
    - "ipAddress"
    - "cidrBlock"
    - "awsSecurityGroup"
  AccessListValue:
    Type: String
    Description: Value for access list item formatted based on the AccessListType
    Default: ""
  AccessListDeleteAfterDate:
    Type: String
    Description: Not sure how to properly type this for ISO 8601
    Default: "NEVER"
Conditions:
  EnableSecretForApiKeyCondition: !Equals 
  - !Ref EnableSecretForApiKey
  - 'true'
Resources:
  AtlasApiKeySecret:
    Condition: EnableSecretForApiKeyCondition
    Type: 'AWS::SecretsManager::Secret'
    Properties:
      Name: !Sub "${AWS::StackName}-ApiKey-Secret"
      Description: This secret has a hardcoded password in SecretString (use GenerateSecretString instead)
      #
      # { "PublicKey" : "xxx", "PrivateKey", "yyy", "OrgId": "zzz" }
      #
      SecretString: !Join ['', ['{"PublicKey":"', !Ref "PublicKey",'", "PrivateKey":"', !Ref "PrivateKey", '", "OrgId":"', !Ref "OrgId", '"}'] ]
      Tags:
      - Key: mongodb-atlas-quickstart-stack 
        Value: !Sub "${AWS::StackName}"
  AtlasIAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
          Action: 'sts:AssumeRole'
  AtlasDeployment:
    Type: Custom::AtlasDeployment
    DependsOn: AtlasIAMRole
    Properties:
      # TODO: We should be able to change the Type to "MongoDB::Atlas::Deployment"
      # And remove this refernce to the lambda ServiceToken
      ServiceToken: !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:mongodb-atlas-resource-provider"
      Name: !Sub "${AWS::StackName}"
      OrgId: !If
      - "EnableSecretForApiKeyCondition"
      - !Join [ "", ["{{resolve:secretsmanager:", !Ref "AtlasApiKeySecret", ":SecretString:OrgId}}"]]   
      - "NOT_SET"
      PublicKey: !If 
      - "EnableSecretForApiKeyCondition"
      - !Join [ "", ["{{resolve:secretsmanager:", !Ref "AtlasApiKeySecret", ":SecretString:PublicKey}}"]]
      - "NOT_SET"
      PrivateKey: !If
      - "EnableSecretForApiKeyCondition"
      - !Join [ "", ["{{resolve:secretsmanager:", !Ref "AtlasApiKeySecret", ":SecretString:PrivateKey}}"]]
      - "NOT_SET"
      BackupRetentionPeriod: 0
      Project:
        name: !Sub "${AWS::StackName}"
        orgId: !If
        - "EnableSecretForApiKeyCondition"
        - !Ref "OrgId"
        - "NOT_SET"
      AccessList:
        accessListType: !Ref "AccessListType"
        accessListValue: !Ref "AccessListValue"
        comment: "mongodb-atlas-resource-provider access list entry"
      DatabaseUsers:
      - username: !GetAtt "AtlasIAMRole.Arn"
        databaseName: "$external"
        awsIAMType: "ROLE"
        roles:
        - roleName: "readWrite"
          databaseName: !Sub "${AWS::StackName}"
        scopes:
        - name: !Sub "${AWS::StackName}"
          type: "CLUSTER"
  AtlasCluster:
    Type: Custom::AtlasCluster
    DependsOn: AtlasDeployment
    Properties:
      # TODO: We should be able to change the Type to "MongoDB::Atlas::Deployment"
      # And remove this refernce to the lambda ServiceToken
      ServiceToken: !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:mongodb-atlas-resource-provider"
      Name: !Sub "${AWS::StackName}"
      OrgId: !If
      - "EnableSecretForApiKeyCondition"
      - !Join [ "", ["{{resolve:secretsmanager:", !Ref "AtlasApiKeySecret", ":SecretString:OrgId}}"]]   
      - "NOT_SET"
      PublicKey: !If 
      - "EnableSecretForApiKeyCondition"
      - !Join [ "", ["{{resolve:secretsmanager:", !Ref "AtlasApiKeySecret", ":SecretString:PublicKey}}"]]
      - "NOT_SET"
      PrivateKey: !If
      - "EnableSecretForApiKeyCondition"
      - !Join [ "", ["{{resolve:secretsmanager:", !Ref "AtlasApiKeySecret", ":SecretString:PrivateKey}}"]]
      - "NOT_SET"
      BackupRetentionPeriod: 0
      Project:
        name: !Sub "${AWS::StackName}"
        id: !Ref "AtlasDeployment"
        orgId: !If
        - "EnableSecretForApiKeyCondition"
        - !Ref "OrgId"
        - "NOT_SET"
      Cluster:
        name: !Sub "${AWS::StackName}"
        mongoDBMajorVersion: "4.4"
        providerSettings:
          instanceSizeName: !Ref "ClusterInstanceSize" 
          regionName: !Ref "ClusterRegion"
  AtlasPeer:  
    Type: Custom::AtlasPeers
    DependsOn: AtlasCluster
    Properties:
      # TODO: We should be able to change the Type to "MongoDB::Atlas::Deployment"
      # And remove this refernce to the lambda ServiceToken
      ServiceToken: !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:mongodb-atlas-resource-provider"
      Name: !Sub "${AWS::StackName}"
      OrgId: !If
      - "EnableSecretForApiKeyCondition"
      - !Join [ "", ["{{resolve:secretsmanager:", !Ref "AtlasApiKeySecret", ":SecretString:OrgId}}"]]   
      - "NOT_SET"
      PublicKey: !If 
      - "EnableSecretForApiKeyCondition"
      - !Join [ "", ["{{resolve:secretsmanager:", !Ref "AtlasApiKeySecret", ":SecretString:PublicKey}}"]]
      - "NOT_SET"
      PrivateKey: !If
      - "EnableSecretForApiKeyCondition"
      - !Join [ "", ["{{resolve:secretsmanager:", !Ref "AtlasApiKeySecret", ":SecretString:PrivateKey}}"]]
      - "NOT_SET"
      Project:
        name: !Sub "${AWS::StackName}"
        id: !Ref "AtlasDeployment"
        orgId: !If
        - "EnableSecretForApiKeyCondition"
        - !Ref "OrgId"
        - "NOT_SET"
      Peers:
      - regionName: !Ref "ClusterRegion"
        accepterRegionName: !Ref "ClusterRegion"
        awsAccountId: !Sub "${AWS::AccountId}" 
        containerId: "{CONTAINER-ID}"
        routeTableCidrBlock: "10.0.0.0/21"
        vpcId: !Ref "VPC"
Outputs:
  AtlasIAMRole:
    Description: "ARN for AWS IAM Role database cluster access"
    Value: !GetAtt "AtlasIAMRole.Arn"
    Export:
      Name: !Join [ "-", [ !Ref "AWS::StackName","AtlasIAMRoleARN" ] ]
  AtlasDeployment:
    Description: "Info on your Atlas deployment"
    Value: !Ref AtlasDeployment
    Export:
      Name: !Join [ "-", [ !Ref "AWS::StackName","AtlasProjectId" ] ]
  AtlasCluster:
    Description: "Info on your Atlas Cluster"
    Value: !Ref AtlasCluster
    Export:
      Name: !Join [ "-", [ !Ref "AWS::StackName","AtlasCluster" ] ]
  SrvHost:
    Description: "Hostname for mongodb+srv:// connection string"
    Value: !GetAtt "AtlasDeployment.SrvHost"
    Export:
      Name: !Join [ "-", [ !Ref "AWS::StackName","standardSrv" ] ]
  AtlasPeer:
    Description: "Info on your Atlas Peer"
    Value: !Ref AtlasPeer
    Export:
      Name: !Join [ "-", [ !Ref "AWS::StackName","AtlasPeer" ] ]

