# This is a basic workflow to help you get started with Actions

name: AWS Quickstart

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  workflow_dispatch:
    inputs:
      region:
        description: "AWS region"
        default: "us-east-1"
        required: true
      resourceManagerStackName:
        description: "Name"
        default: "mongodb-cloud-resource-manager"
        required: true
      instanceSize:
        description: "Instance size, defaults to M10"
        default: "M10"
        required: true

jobs:
  deploy-resource-manager:
    runs-on: ubuntu-latest
    env:
        AWS_PAGER: ""
    steps:
      - uses: actions/checkout@v2
      - name: Setup awscli
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          ./aws/install
      - name: Configure AWS credentials from Test account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ github.event.inputs.region }}
      - name: Generate new template
        run: |
          echo "Should 'checking in' also run the packager?"
      - name: Deploy the MongoDB Cloud Resource Manager lambda
        run: |
          ls -l /github/workspace
          echo "Deploying the MongoDB Cloud Resource Manager Custom lambda function"
          ./scripts/deploy.MongoDBCloudResourceManager_lambda.sh  ${{ github.event.inputs.resourceManagerStackName }} ${{ github.event.inputs.region }}
  create-quickstart-stack:
    runs-on: ubuntu-latest
    depends-on: deploy
    env:
      ATLAS_PUBLIC_KEY: ${{ secrets.ATLAS_PUBLIC_KEY }}
      ATLAS_PRIVATE_KEY: ${{ secrets.ATLAS_PRIVATE_KEY }}
      ATLAS_ORG_ID: ${{ secrets.ATLAS_ORG_ID }}
      AWS_PAGER: ""
  
    steps:
    - uses: actions/checkout@v2

    - name: Configure AWS credentials 
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ github.event.inputs.region }}
    - name: Create the MongoDB Cloud Deployment
      run: |
        cd /github/workspace
        TAG=$(mktemp | cut -d'.' -f2)
        STACK_NAME="aws-quickstart-${TAG}"
        echo "Attempt to create-stack: ${STACK_NAME}"
        aws cloudformation create-stack --capabilities CAPABILITY_IAM \
        --template-body file://templates/quickstart-mongodb-atlas.template.yaml \
        --disable-rollback \
        --output json \
        --parameters ParameterKey=PublicKey,ParameterValue=$ATLAS_PUBLIC_KEY \
                     ParameterKey=PrivateKey,ParameterValue=$ATLAS_PRIVATE_KEY \
                     ParameterKey=OrgId,ParameterValue=$ATLAS_ORG_ID \
                     --stack-name "${STACK_NAME}" 
